# 我们预期的开发模式及具体操作
介绍一种开发模式：
+ 保证 master 上的代码是最新的，开发新 feature 或者 debug 以及其他任何修改时都应当新建分支，在开发有阶段性成果后申请 merge 到 master 分支
+ 每次出现冲突，应当使用如下方法
    1. 切换到与 master 冲突的分支，使用```git merge master```命令
    2. 修改冲突后再次提出 merge 到 master 分支的申请
+ 开发分支应当以“开发者名字_改动操作”方式命名，以便后续查看

在我们的实践中具体流程如下：
1. 负责人建立一个仓库，在这次实验中就是这个 git 仓库。
2. 负责人给予合作者读写权限后，合作者在本地进行克隆操作，使用ssh方式对应的URL
    + ssh免密登录的相关方法见
    + 如果已经选择了 https 的 URL，可以在 "git_commands.md"中查看关于“修改绑定的远程仓库”的命令
3. 合作者在本地仓库中新建以“名称缩写_开发内容”为名的分支，如果两个人共同开发，以"&"符号隔开
4. 在分支内将开发内容细化后，对可以**并行**开发的划分进一步建立新的分支，命名方式同上
5. 在分类最细的子分支中进行开发，在合并到上一级分支之前，邀请至少一位合作者进行代码审核
6. 审核后进行合并并关闭分支，但不删除分支
7. 在出现新问题时重新建立新分支进行解决
8. 在阶段性可并行开发的项目开发完之后再进行下一步开发
> 开发过程中应当经常对远程仓库进行更新，一般在个人仓库中作出阶段性成果后应当进行一次 push 操作请合作者审查
> 在进行 merge 操作时，永远先将父分支 merge 到个人细化的子分支中，保证所有修改操作都在子分支中完成后再 merge 回父分支
    - merge 回父分支时如果期间父分支发生了新的改动，应再次进行相同的操作
